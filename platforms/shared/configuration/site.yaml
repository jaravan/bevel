##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

---
##############################################################################
# Main Playbook for the setting up and reseting Hyperledger Bevel DLT network
##############################################################################

# This playbook will validate the network yaml using ajv
- import_playbook: validate-network-schema.yaml  
  when: reset is undefined or reset == 'false'       

# Setup controller environment
- import_playbook: setup-environment.yaml   

# Setup Flux, Proxy and Cert manager on each organization cluster
- import_playbook: setup-k8s-environment.yaml 
  when: reset is undefined or reset == 'false'

############################################
# Playbook for Hyperledger Fabric Operations
############################################

# Deploy network
- import_playbook: "{{ playbook_dir }}/../../hyperledger-fabric/configuration/deploy-network.yaml"
  vars:
    add_new_org: 'false'
  when:
    - network.type == 'fabric'
    - network.env.type != 'operator'
    - (reset is undefined or reset == 'false')
    - (network.upgrade is not defined or network.upgrade == false)

- import_playbook: "{{ playbook_dir }}/../../hyperledger-fabric/configuration/deploy-operator-network.yaml"
  vars:
    add_new_org: 'false'
  when:
    - network.type == 'fabric'
    - network.env.type == 'operator'
    - (reset is undefined or reset == 'false')
    - (network.upgrade is not defined or network.upgrade == false)

# Upgrade network
- import_playbook: "{{ playbook_dir }}/../../hyperledger-fabric/configuration/upgrade-network.yaml"
  vars:
    add_new_org: 'false'
  when:
    - network.type == 'fabric'
    - network.env.type != 'operator'
    - (reset is undefined or reset == 'false')
    - (network.upgrade is defined and network.upgrade == true)

- import_playbook: "{{ playbook_dir }}/../../hyperledger-fabric/configuration/cleanup.yaml"
  when: 
  - network.type == 'fabric'
  - network.env.type != 'operator'
  - reset is defined and reset == 'true'

# Delete the generic network resources from kuberentes 
- import_playbook: delete-network.yaml
  when:
  - reset is defined and reset == 'true'
  - network.env.type != 'operator'
